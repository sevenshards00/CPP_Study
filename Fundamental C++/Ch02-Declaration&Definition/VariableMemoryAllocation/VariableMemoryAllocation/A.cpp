/*
* Fundamental C++ - Ch02-Declaration&Definition
* 파일명: A.cpp
* 파일 버전: 0.1
* 작성자: Sevenshards
* 작성 일자: 2024-02-20
* 이전 버전 작성 일자:
* 버전 내용: 변수가 메모리에 할당되는 순서
* 이전 버전 내용:
*/


/*
* A.cpp와 B.cpp의 전역 및 정적 객체 중 누가 먼저 메모리를 할당받게 되는가?
* -> 순서를 정할 수 없음.
* 전역 및 정적 객체는 프로세스의 가상 메모리 영역 중 '데이터 영역'에 올라가게 됨.
* 가상 메모리 영역 중에서 코드와 데이터 영역은 어떤 순서를 가지고 가상 메모리에 적재되는 것이 아님.
* 그래서 순서 자체가 의미가 없음.
*/
int g_ValA1;
int g_ValA2;
static int s_Val;

/*
* 지역 변수의 경우에도 마찬가지로 순서에 큰 의미는 없음.
* 어차피 컴파일러가 컴파일을 하는 시점에서 함수 내에서 사용할 모든 지역 변수의 크기를 다 계산을 함.
* 그래서 지역 변수는 정적 바인딩 또는 정적 할당이라고 하는 것.
* 
* 추가적으로 생각할 부분은 함수 호출 시 인자와 함수 내의 지역 변수의 메모리 할당 순서는 약간의 차이가 있음.
* 실제로 함수의 인자도 스택 메모리에 할당이 되는데, 인자의 경우는 함수가 호출되기 직전에 스택을 늘려서 영역을 확보.
* Assembly를 기준으로 함수의 call 명령어 전후로 인자의 영역이 스택에 먼저 생성됨 -> 그 이후 함수 내부에 정의된 지역 변수들이 스택에 생성.
*/
void FuncA(int arg1, int arg2)
{
	int local1;
	int local2;
}